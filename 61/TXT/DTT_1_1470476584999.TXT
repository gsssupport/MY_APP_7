CREATE TABLE TRN_SRCH_CNTS
(
TSCNTS_ID INTEGER NOT NULL ,
CNTS_DATE TIMESTAMP WITHOUT TIME ZONE NULL,
CNTS_NAME CHARACTER VARYING(128) NULL,
CNTS_EMAIL CHARACTER VARYING(128) NULL,
TELEPHONE_NUMBER CHARACTER VARYING(128) NULL,
CNTS_PA CHARACTER VARYING(128) NULL,
CNTS_REMARKS CHARACTER VARYING(128) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_SRCH_CNTS
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_SRCH_CNTS
 ALTER COLUMN TSCNTS_ID  SET DEFAULT nextval('SEQ_TRN_SRCH_CNTS');


CREATE OR REPLACE FUNCTION TRG_TRN_SRCH_CNTS()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_SRCH_CNTS=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_SRCH_CNTS ADD CONSTRAINT TRN_SRCH_CNTS_pkey primary key(TSCNTS_ID);

 CREATE TRIGGER TRG_HST_TRN_SRCH_CNTS
 BEFORE INSERT OR UPDATE 
 ON TRN_SRCH_CNTS
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_SRCH_CNTS  DISABLE TRIGGER TRG_HST_TRN_SRCH_CNTS ;
