CREATE TABLE TRN_SRCH_ADM
(
TSADM_ID INTEGER NOT NULL ,
ADM_DATE TIMESTAMP WITHOUT TIME ZONE NULL,
ADM_NAME_OF_DOC CHARACTER VARYING(128) NULL,
ADM_REF_NO INTEGER NULL,
ADM_ST_RF CHARACTER VARYING(128) NULL,
SUBJECT_OF_THE_DOCUMENT_TITLE_OF_THE_DOCUMENT CHARACTER VARYING(128) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_SRCH_ADM
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_SRCH_ADM
 ALTER COLUMN TSADM_ID  SET DEFAULT nextval('SEQ_TRN_SRCH_ADM');


CREATE OR REPLACE FUNCTION TRG_TRN_SRCH_ADM()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_SRCH_ADM=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_SRCH_ADM ADD CONSTRAINT TRN_SRCH_ADM_pkey primary key(TSADM_ID);

 CREATE TRIGGER TRG_HST_TRN_SRCH_ADM
 AFTER INSERT Or UPDATE 
 ON TRN_SRCH_ADM
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_SRCH_ADM  ENABLE TRIGGER TRG_HST_TRN_SRCH_ADM ;
